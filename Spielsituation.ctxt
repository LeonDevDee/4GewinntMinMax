#BlueJ class context
comment0.target=Spielsituation
comment0.text=\r\n\ Beschreiben\ Sie\ hier\ die\ Klasse\ Spielsituation.\r\n\ \r\n\ @author\ (Ihr\ Name)\ \r\n\ @version\ (eine\ Versionsnummer\ oder\ ein\ Datum)\r\n
comment1.params=modell\ aktuellerSpieler\ spieler1\ spieler2
comment1.target=Spielsituation(Stein[][],\ Spieler,\ Spieler,\ Spieler)
comment10.params=
comment10.target=boolean\ pruefeGewonnen()
comment10.text=\r\n\ Hier\ werden\ alle\ Pruefemethoden\ aufgerufen.\r\n\ @return\ Wahrheitswert\r\n
comment11.params=
comment11.target=boolean\ pruefeVierInEinerSpalte()
comment11.text=\r\n\ Wenn\ vier\ Steine\ einer\ gleichen\ Farbe\ in\ einer\ Spalte\ nebeneinanderliegen\ gebe\ true\ zur\u00FCck,\ ansonsten\ false.\r\n\ @return\ Wahrheitswert\r\n
comment12.params=
comment12.target=boolean\ pruefeVierInEinerZeile()
comment12.text=\r\n\ Wenn\ vier\ Steine\ einer\ gleichen\ Farbe\ in\ einer\ Zeile\ nebeneinanderliegen\ gebe\ true\ zur\u00FCck,\ ansonsten\ false.\r\n\ @return\ Wahrheitswert\r\n
comment13.params=
comment13.target=boolean\ pruefeVierDiagonalLR()
comment13.text=\r\n\ Wenn\ vier\ Steine\ einer\ Farbe\ in\ einer\ Diagonalen\ von\ links\ nach\ rechts\ vorhanden\ sind,\ gebe\ true\ zur\u00FCck,\ ansonsten\ false.\r\n\ @return\ Wahrheitswert\r\n
comment14.params=
comment14.target=boolean\ pruefeVierDiagonalRL()
comment14.text=\r\n\ Wenn\ vier\ Steine\ einer\ Farbe\ in\ einer\ Diagonalen\ von\ rechts\ nach\ links\ vorhanden\ sind,\ gebe\ true\ zur\u00FCck,\ ansonsten\ false.\r\n\ @return\ Wahrheitswert\r\n
comment2.params=zug
comment2.target=void\ fuehreZugAus(Zug)
comment3.params=
comment3.target=List\ gibMoeglicheZuege()
comment4.params=
comment4.target=Stein[][]\ gibSteine()
comment4.text=\r\n\ Gibt\ ein\ 2D-Array\ mit\ allen\ im\ Attribut\ modell\ gespeicherten\ Steinen\ zur\u00FCck\r\n\ \r\n\ @return\ Stein[][]\r\n
comment5.params=
comment5.target=Spieler\ gibAktuellenSpieler()
comment6.params=
comment6.target=java.awt.Color\ gibFarbeAktuellerSpieler()
comment6.text=\r\n\ Gib\ die\ Farbe\ des\ Attributes\ aktuellerSpieler\ zur\u00FCck\r\n\ \r\n\ @return\ Color\r\n
comment7.params=
comment7.target=void\ spielerWechseln()
comment7.text=\r\n\ \u00DCberpr\u00FCft,\ welcher\ Spieler\ im\ Attribut\ AktuellerSpieler\ gespeichert\ ist\ und\ setzt\ den\ anderen\ \r\n\ Spieler\ als\ AktuellerSpieler.\ \r\n
comment8.params=spalte
comment8.target=void\ setzeStein(int)
comment8.text=\r\n\ Wenn\ der\ Spieler\ noch\ Steine\ vorhanden\ hat,\ holt\ sich\ das\ Modell\ den\ Stein\ vom\ aktuellen\ Spieler.\r\n\ Die\ aktuell\ m\u00F6gliche\ Zeile\ wird\ ermittelt.\ Sollte\ diese\ \!\=\ -1\ sein,\ wird\ das\ Modell\ mit\ dem\r\n\ Stein\ an\ aktueller\ Position\ erweitert.\ Sollte\ noch\ kein\ Spieler\ gewionnen\ haben,\ wird\ der\ \r\n\ Spieler\ gewechselt.\r\n\ \r\n\ Die\ Spalte\ wird\ von\ dem\ Spieler\ als\ zuSpielendeSpalte\ genommen\r\n
comment9.params=spalte
comment9.target=int\ gibZeile(int)
comment9.text=\r\n\ Hier\ wird\ die\ aktuelle\ Zeile\ zur\u00FCckgegeben.\ Sollte\ auch\ die\ oberste\ Zeile\ belegt\ sein,\ wird\ -\ 1\r\n\ zur\u00FCck\ gegeben.\r\n\ \r\n\ @param\ spalte\ -\ gibt\ die\ Spalte\ an,\ die\ vom\ Spieler\ gew\u00E4hlt\ wurde\ (Spaltenz\u00E4hlung\ ab\ 0)\r\n\ @return\ zeilenwert\ -\ gibt\ die\ Zeile\ an,\ die\ von\ oben\ gesehen\ noch\ frei\ ist\r\n
numComments=15
