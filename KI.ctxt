#BlueJ class context
comment0.target=KI
comment0.text=\r\n\ KI\ ist\ die\ Hauptklasse\ der\ facharbeitlichen\ Ausarbeitung.\ Von\ anderen\ Klassen\ wird\ neben\ dem\ Konstruktor\ auf\ gibKopie()\ und\ ermittleNaechstenZug()\ aufgerufen.\ Alle\r\n\ weiteren\ Methode\ werden\ in\ der\ Regel\ nur\ innerhalb\ der\ Klasse\ verwendet\r\n\ \r\n\ @author\ Leon\ Wehrwein\r\n\ @version\ 13.02.2022\r\n
comment1.params=color\ suchtiefe\ suchmodus
comment1.target=KI(java.awt.Color,\ int,\ int)
comment1.text=\r\n\ Konstruktor\ der\ Klasse\ KI\r\n\ \r\n\ @param\ color\ Farbe\ der\ KI\r\n\ @param\ suchtiefe\ Die\ Tiefe,\ bis\ zuwelcher\ der\ MinMax-Algorithmus\ suchen\ soll\r\n\ \r\n
comment10.params=s
comment10.target=int\ bewerteSpielsituation(Spielsituation)
comment10.text=\r\n\ Bertungsprozedur\ des\ MinMax-Algorithmus\r\n\ \r\n\ @param\ s\ Spielsituation,\ die\ bewertet\ werden\ soll\r\n\ @return\ Wertung\r\n
comment2.params=
comment2.target=Spieler\ gibKopie()
comment2.text=\r\n\ Erstellt\ eine\ Kopie\ \r\n\ \r\n\ @return\ neue\ Instanz,\ mit\ gleichen\ Eigenschaften\ der\ angesteuerten\ Instanz\ von\ KI\r\n
comment3.params=s
comment3.target=Zug\ ermittleNachestenZug(Spielsituation)
comment3.text=\r\n\ Schnittstelle\ zwischen\ MinMax-Algorithmus\ und\ Spiel.\ Ruft\ bildeUndBewerteSpielbaum()\ auf,\ und\ bildet\ vom\ r\u00FCckgegebenen\ Spielbaum\ den\ auszuf\u00FChrenden\ Zug.\r\n\ \r\n\ @param\ s\ die\ Spielsituation,\ zu\ welcher\ der\ Folgezug\ ermittelt\ werden\ soll\r\n\ @return\ den\ besten\ ermittelten\ Folgezug\ bei\ der\ Spielsituation\ s\r\n
comment4.params=t\ alpha\ beta\ s
comment4.target=int\ alphaBeta(int,\ int,\ int,\ Spielsituation)
comment5.params=s
comment5.target=List\ gibNachfolgesituationen(Spielsituation)
comment6.params=t\ s
comment6.target=Tree\ minMax(int,\ Spielsituation)
comment6.text=\r\n\ Die\ eigentliche\ MinMax-Methode.\ Bildet\ und\ bewertet\ einen\ gesamten\ Spielbaum\ zur\ Situation\ s\ bis\ zur\ Tiefe\ t\r\n\ \ \r\n\ \ @param\ s\ die\ Ausgangssituation\r\n\ \ @param\ t\ die\ Tiefe,\ von\ der\ Ausgangssituation\ aus,\ bis\ zu\ welcher\ gesucht\ werden\ soll\r\n\ \ @return\ einen\ vollwertigen\ Spielbaum\ von\ Ausgangsituation\ s\ bis\ zur\ Tiefe\ t,\ welcher\ vollst\u00E4ndig\ bewertet\ ist\r\n
comment7.params=folgeSpielsituationen\ bewertung
comment7.target=Zug\ passendenZugZuSpielsituationenErmitteln(List,\ int)
comment7.text=\r\n\ Gibt\ einen\ Zug\ zur\u00FCck,\ welcher\ zu\ einer\ der\ gegebenen\ Folgesituationen\ mit\ der\ gegeben\ Bewertung\ f\u00FChrt.\ \r\n\ \r\n\ @param\ folgeSpielsituationen\ alle\ direkten\ Folgesituationen\ zur\ Ausgangssituation\r\n\ @param\ bewertung\ die\ beste\ Bewertung\ innerhalb\ der\ Folgesituationen\r\n\ @return\ einen\ m\u00F6glichen\ Zug,\ um\ eine\ Folgesituation\ zu\ erhalten,\ welche\ die\ gegebenen\ Bewertung\ hat\r\n
comment8.params=zuege
comment8.target=Zug\ zufaelligenZugWaehlen(List)
comment8.text=\r\n\ Ermittelt\ aus\ mehreren\ Z\u00FCgen\ einen\ zuf\u00E4lligen.(Zum\ Beispiel\ wenn\ mehrere\ Z\u00FCge\ gleichwertig\ sind)\r\n\ \r\n\ @param\ zuege\ Liste\ der\ auszuw\u00E4hlenden\ Z\u00FCge\r\n\ @return\ eine\ zuf\u00E4lligen\ Zug\ innerhalb\ der\ Liste\r\n
comment9.params=s
comment9.target=List\ ermittleMoeglicheZuege(Spielsituation)
comment9.text=\r\n\ Ermittel\ die\ m\u00F6glichen\ Z\u00FCge\ bei\ einer\ gegebenen\ Situation\ s\r\n\ \r\n\ @param\ s\ Ausgangssituation\r\n\ @return\ Liste\ der\ M\u00F6glichen\ Z\u00FCge\r\n
numComments=11
